{
  "database": {
    "family": "supabase-database",
    "networkMode": "awsvpc",
    "requiresCompatibilities": ["EC2"],
    "taskRoleArn": "${TaskRole}",
    "executionRoleArn": "${ExecutionRole}",
    "cpu": "4096",
    "memory": "16384",
    "containerDefinitions": [
      {
        "name": "db",
        "image": "supabase/postgres:15.8.1.044",
        "essential": true,
        "portMappings": [
          {
            "containerPort": 5432,
            "hostPort": 5432
          }
        ],
        "environment": [
          { "name": "POSTGRES_HOST", "value": "/var/run/postgresql" },
          { "name": "PGPORT", "value": "5432" },
          { "name": "POSTGRES_PORT", "value": "5432" },
          { "name": "PGDATABASE", "value": "postgres" },
          { "name": "POSTGRES_DB", "value": "postgres" }
        ],
        "secrets": [
          { "name": "PGPASSWORD", "valueFrom": "${PostgresPassword}" },
          { "name": "POSTGRES_PASSWORD", "valueFrom": "${PostgresPassword}" },
          { "name": "JWT_SECRET", "valueFrom": "${JwtSecret}" },
          { "name": "JWT_EXP", "valueFrom": "${JwtExpiry}" }
        ],
        "mountPoints": [
          { 
            "sourceVolume": "db-data",
            "containerPath": "/var/lib/postgresql/data"
          },
          { 
            "sourceVolume": "db-init-scripts",
            "containerPath": "/docker-entrypoint-initdb.d",
            "readOnly": true
          },
          {
            "sourceVolume": "db-config",
            "containerPath": "/etc/postgresql-custom"
          }
        ],
        "healthCheck": {
          "command": ["CMD", "pg_isready", "-U", "postgres", "-h", "localhost"],
          "interval": 5,
          "timeout": 5,
          "retries": 10,
          "startPeriod": 10
        },
        "logConfiguration": {
          "logDriver": "awslogs",
          "options": {
            "awslogs-group": "/ecs/supabase",
            "awslogs-region": "${AWS::Region}",
            "awslogs-stream-prefix": "db"
          }
        },
        "command": [
          "postgres",
          "-c", "config_file=/etc/postgresql/postgresql.conf",
          "-c", "log_min_messages=fatal"
        ]
      },
      {
        "name": "vector",
        "image": "timberio/vector:0.28.1-alpine",
        "essential": false,
        "portMappings": [
          {
            "containerPort": 9001,
            "hostPort": 9001
          }
        ],
        "mountPoints": [
          { 
            "sourceVolume": "vector-config",
            "containerPath": "/etc/vector",
            "readOnly": true
          }
        ],
        "secrets": [
          { "name": "LOGFLARE_API_KEY", "valueFrom": "${LogflareApiKey}" }
        ],
        "healthCheck": {
          "command": [
            "CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9001/health"
          ],
          "interval": 5,
          "timeout": 5,
          "retries": 3
        },
        "logConfiguration": {
          "logDriver": "awslogs",
          "options": {
            "awslogs-group": "/ecs/supabase",
            "awslogs-region": "${AWS::Region}",
            "awslogs-stream-prefix": "vector"
          }
        },
        "command": ["--config", "/etc/vector/vector.yml"]
      },
      {
        "name": "supavisor",
        "image": "supabase/supavisor:2.4.12",
        "essential": true,
        "dependsOn": [
          {
            "containerName": "db",
            "condition": "HEALTHY"
          }
        ],
        "portMappings": [
          {
            "containerPort": 5432,
            "hostPort": 5432
          },
          {
            "containerPort": 6543,
            "hostPort": 6543
          },
          {
            "containerPort": 4000,
            "hostPort": 4000
          }
        ],
        "environment": [
          { "name": "PORT", "value": "4000" },
          { "name": "POSTGRES_PORT", "value": "5432" },
          { "name": "POSTGRES_DB", "value": "postgres" },
          { "name": "CLUSTER_POSTGRES", "value": "true" },
          { "name": "REGION", "value": "local" },
          { "name": "ERL_AFLAGS", "value": "-proto_dist inet_tcp" },
          { "name": "POOLER_TENANT_ID", "value": "${TenantId}" },
          { "name": "POOLER_DEFAULT_POOL_SIZE", "value": "20" },
          { "name": "POOLER_MAX_CLIENT_CONN", "value": "300" },
          { "name": "POOLER_POOL_MODE", "value": "transaction" },
          { "name": "RUN_MIGRATIONS", "value": "false" }
        ],
        "secrets": [
          { "name": "POSTGRES_PASSWORD", "valueFrom": "${PostgresPassword}" },
          { "name": "DATABASE_URL", "valueFrom": "${DatabaseUrl}" },
          { "name": "SECRET_KEY_BASE", "valueFrom": "${SecretKeyBase}" },
          { "name": "VAULT_ENC_KEY", "valueFrom": "${VaultEncKey}" },
          { "name": "API_JWT_SECRET", "valueFrom": "${JwtSecret}" },
          { "name": "METRICS_JWT_SECRET", "valueFrom": "${JwtSecret}" }
        ],
        "mountPoints": [
          { 
            "sourceVolume": "pooler-config",
            "containerPath": "/etc/pooler",
            "readOnly": true
          }
        ],
        "healthCheck": {
          "command": [
            "CMD", "curl", "-sSfL", "--head", "-o", "/dev/null", "http://127.0.0.1:4000/api/health"
          ],
          "interval": 10,
          "timeout": 5,
          "retries": 5,
          "startPeriod": 10
        },
        "logConfiguration": {
          "logDriver": "awslogs",
          "options": {
            "awslogs-group": "/ecs/supabase",
            "awslogs-region": "${AWS::Region}",
            "awslogs-stream-prefix": "supavisor"
          }
        },
        "command": [
          "/bin/sh",
          "-c",
          "/app/bin/supavisor eval \"$$(cat /etc/pooler/pooler.exs)\" && /app/bin/server"
        ]
      }
    ],
    "volumes": [
      {
        "name": "db-data",
        "efsVolumeConfiguration": {
          "fileSystemId": "${FileSystemId}",
          "rootDirectory": "/db/data",
          "transitEncryption": "ENABLED",
          "authorizationConfig": {
            "accessPointId": "${DBDataAccessPoint}"
          }
        }
      },
      {
        "name": "db-init-scripts",
        "efsVolumeConfiguration": {
          "fileSystemId": "${FileSystemId}",
          "rootDirectory": "/db/init-scripts",
          "transitEncryption": "ENABLED",
          "authorizationConfig": {
            "accessPointId": "${DBScriptsAccessPoint}"
          }
        }
      },
      {
        "name": "db-config",
        "efsVolumeConfiguration": {
          "fileSystemId": "${FileSystemId}",
          "rootDirectory": "/db/config",
          "transitEncryption": "ENABLED",
          "authorizationConfig": {
            "accessPointId": "${DBConfigAccessPoint}"
          }
        }
      },
      {
        "name": "vector-config",
        "efsVolumeConfiguration": {
          "fileSystemId": "${FileSystemId}",
          "rootDirectory": "/vector",
          "transitEncryption": "ENABLED",
          "authorizationConfig": {
            "accessPointId": "${VectorConfigAccessPoint}"
          }
        }
      },
      {
        "name": "pooler-config",
        "efsVolumeConfiguration": {
          "fileSystemId": "${FileSystemId}",
          "rootDirectory": "/pooler",
          "transitEncryption": "ENABLED",
          "authorizationConfig": {
            "accessPointId": "${PoolerConfigAccessPoint}"
          }
        }
      }
    ]
  },
  "api": {
    "family": "supabase-api",
    "networkMode": "awsvpc",
    "requiresCompatibilities": ["FARGATE"],
    "taskRoleArn": "${TaskRole}",
    "executionRoleArn": "${ExecutionRole}",
    "cpu": "1024",
    "memory": "2048",
    "containerDefinitions": [
      {
        "name": "kong",
        "image": "kong:2.8.1",
        "essential": true,
        "portMappings": [
          {
            "containerPort": 8000,
            "hostPort": 8000
          },
          {
            "containerPort": 8443,
            "hostPort": 8443
          }
        ],
        "environment": [
          { "name": "KONG_DATABASE", "value": "off" },
          { "name": "KONG_DECLARATIVE_CONFIG", "value": "/home/kong/kong.yml" },
          { "name": "KONG_DNS_ORDER", "value": "LAST,A,CNAME" },
          { "name": "KONG_PLUGINS", "value": "request-transformer,cors,key-auth,acl,basic-auth" },
          { "name": "KONG_NGINX_PROXY_PROXY_BUFFER_SIZE", "value": "160k" },
          { "name": "KONG_NGINX_PROXY_PROXY_BUFFERS", "value": "64 160k" }
        ],
        "secrets": [
          { "name": "SUPABASE_ANON_KEY", "valueFrom": "${AnonKey}" },
          { "name": "SUPABASE_SERVICE_KEY", "valueFrom": "${ServiceRoleKey}" },
          { "name": "DASHBOARD_USERNAME", "valueFrom": "${DashboardUsername}" },
          { "name": "DASHBOARD_PASSWORD", "valueFrom": "${DashboardPassword}" }
        ],
        "mountPoints": [
          {
            "sourceVolume": "kong-config",
            "containerPath": "/home/kong",
            "readOnly": false
          }
        ],
        "logConfiguration": {
          "logDriver": "awslogs",
          "options": {
            "awslogs-group": "/ecs/supabase",
            "awslogs-region": "${AWS::Region}",
            "awslogs-stream-prefix": "kong"
          }
        },
        "entryPoint": [
          "bash",
          "-c",
          "eval \"echo \\\"$$(cat ~/temp.yml)\\\"\" > ~/kong.yml && /docker-entrypoint.sh kong docker-start"
        ]
      },
      {
        "name": "auth",
        "image": "supabase/gotrue:v2.170.0",
        "essential": true,
        "dependsOn": [
          {
            "containerName": "kong",
            "condition": "START"
          }
        ],
        "portMappings": [
          {
            "containerPort": 9999,
            "hostPort": 9999
          }
        ],
        "environment": [
          { "name": "GOTRUE_API_HOST", "value": "0.0.0.0" },
          { "name": "GOTRUE_API_PORT", "value": "9999" },
          { "name": "GOTRUE_SITE_URL", "value": "${SiteUrl}" },
          { "name": "GOTRUE_DB_DRIVER", "value": "postgres" },
          { "name": "GOTRUE_JWT_ADMIN_ROLES", "value": "service_role" },
          { "name": "GOTRUE_JWT_AUD", "value": "authenticated" },
          { "name": "GOTRUE_JWT_DEFAULT_GROUP_NAME", "value": "authenticated" },
          { "name": "GOTRUE_DISABLE_SIGNUP", "value": "${DisableSignup}" },
          { "name": "GOTRUE_EXTERNAL_EMAIL_ENABLED", "value": "${EnableEmailSignup}" },
          { "name": "GOTRUE_EXTERNAL_ANONYMOUS_USERS_ENABLED", "value": "${EnableAnonymousUsers}" },
          { "name": "GOTRUE_MAILER_AUTOCONFIRM", "value": "${EnableEmailAutoconfirm}" },
          { "name": "GOTRUE_EXTERNAL_PHONE_ENABLED", "value": "${EnablePhoneSignup}" },
          { "name": "GOTRUE_SMS_AUTOCONFIRM", "value": "${EnablePhoneAutoconfirm}" }
        ],
        "secrets": [
          { "name": "API_EXTERNAL_URL", "valueFrom": "${ApiExternalUrl}" },
          { "name": "GOTRUE_DB_DATABASE_URL", "valueFrom": "${GotrueDbUrl}" },
          { "name": "GOTRUE_URI_ALLOW_LIST", "valueFrom": "${UriAllowList}" },
          { "name": "GOTRUE_JWT_SECRET", "valueFrom": "${JwtSecret}" },
          { "name": "GOTRUE_JWT_EXP", "valueFrom": "${JwtExpiry}" },
          { "name": "GOTRUE_SMTP_ADMIN_EMAIL", "valueFrom": "${SmtpAdminEmail}" },
          { "name": "GOTRUE_SMTP_HOST", "valueFrom": "${SmtpHost}" },
          { "name": "GOTRUE_SMTP_PORT", "valueFrom": "${SmtpPort}" },
          { "name": "GOTRUE_SMTP_USER", "valueFrom": "${SmtpUser}" },
          { "name": "GOTRUE_SMTP_PASS", "valueFrom": "${SmtpPass}" },
          { "name": "GOTRUE_SMTP_SENDER_NAME", "valueFrom": "${SmtpSenderName}" },
          { "name": "GOTRUE_MAILER_URLPATHS_INVITE", "valueFrom": "${MailerUrlpathsInvite}" },
          { "name": "GOTRUE_MAILER_URLPATHS_CONFIRMATION", "valueFrom": "${MailerUrlpathsConfirmation}" },
          { "name": "GOTRUE_MAILER_URLPATHS_RECOVERY", "valueFrom": "${MailerUrlpathsRecovery}" },
          { "name": "GOTRUE_MAILER_URLPATHS_EMAIL_CHANGE", "valueFrom": "${MailerUrlpathsEmailChange}" }
        ],
        "healthCheck": {
          "command": [
            "CMD",
            "wget",
            "--no-verbose",
            "--tries=1",
            "--spider",
            "http://localhost:9999/health"
          ],
          "interval": 5,
          "timeout": 5,
          "retries": 3
        },
        "logConfiguration": {
          "logDriver": "awslogs",
          "options": {
            "awslogs-group": "/ecs/supabase",
            "awslogs-region": "${AWS::Region}",
            "awslogs-stream-prefix": "auth"
          }
        }
      },
      {
        "name": "rest",
        "image": "postgrest/postgrest:v12.2.8",
        "essential": true,
        "dependsOn": [
          {
            "containerName": "kong",
            "condition": "START"
          }
        ],
        "portMappings": [
          {
            "containerPort": 3000,
            "hostPort": 3000
          }
        ],
        "environment": [
          { "name": "PGRST_DB_ANON_ROLE", "value": "anon" },
          { "name": "PGRST_DB_USE_LEGACY_GUCS", "value": "false" }
        ],
        "secrets": [
          { "name": "PGRST_DB_URI", "valueFrom": "${PgrstDbUri}" },
          { "name": "PGRST_DB_SCHEMAS", "valueFrom": "${PgrstDbSchemas}" },
          { "name": "PGRST_JWT_SECRET", "valueFrom": "${JwtSecret}" },
          { "name": "PGRST_APP_SETTINGS_JWT_SECRET", "valueFrom": "${JwtSecret}" },
          { "name": "PGRST_APP_SETTINGS_JWT_EXP", "valueFrom": "${JwtExpiry}" }
        ],
        "logConfiguration": {
          "logDriver": "awslogs",
          "options": {
            "awslogs-group": "/ecs/supabase",
            "awslogs-region": "${AWS::Region}",
            "awslogs-stream-prefix": "rest"
          }
        },
        "command": ["postgrest"]
      }
    ],
    "volumes": [
      {
        "name": "kong-config",
        "efsVolumeConfiguration": {
          "fileSystemId": "${FileSystemId}",
          "rootDirectory": "/kong",
          "transitEncryption": "ENABLED",
          "authorizationConfig": {
            "accessPointId": "${KongConfigAccessPoint}"
          }
        }
      }
    ]
  },
  "dashboard": {
    "family": "supabase-dashboard",
    "networkMode": "awsvpc",
    "requiresCompatibilities": ["FARGATE"],
    "taskRoleArn": "${TaskRole}",
    "executionRoleArn": "${ExecutionRole}",
    "cpu": "1024",
    "memory": "2048",
    "containerDefinitions": [
      {
        "name": "studio",
        "image": "supabase/studio:20250224-d10db0f",
        "essential": true,
        "portMappings": [
          {
            "containerPort": 3000,
            "hostPort": 3000
          }
        ],
        "environment": [
          { "name": "STUDIO_PG_META_URL", "value": "http://localhost:8080" },
          { "name": "DEFAULT_ORGANIZATION_NAME", "value": "${DefaultOrganization}" },
          { "name": "DEFAULT_PROJECT_NAME", "value": "${DefaultProject}" },
          { "name": "SUPABASE_URL", "value": "${SupabaseUrl}" },
          { "name": "SUPABASE_PUBLIC_URL", "value": "${SiteUrl}" },
          { "name": "NEXT_PUBLIC_ENABLE_LOGS", "value": "true" },
          { "name": "NEXT_ANALYTICS_BACKEND_PROVIDER", "value": "postgres" },
          { "name": "LOGFLARE_URL", "value": "http://localhost:4000" }
        ],
        "secrets": [
          { "name": "POSTGRES_PASSWORD", "valueFrom": "${PostgresPassword}" },
          { "name": "SUPABASE_ANON_KEY", "valueFrom": "${AnonKey}" },
          { "name": "SUPABASE_SERVICE_KEY", "valueFrom": "${ServiceRoleKey}" },
          { "name": "AUTH_JWT_SECRET", "valueFrom": "${JwtSecret}" },
          { "name": "LOGFLARE_API_KEY", "valueFrom": "${LogflareApiKey}" },
          { "name": "OPENAI_API_KEY", "valueFrom": "${OpenAiApiKey}" }
        ],
        "healthCheck": {
          "command": [
            "CMD",
            "node",
            "-e",
            "fetch('http://localhost:3000/api/platform/profile').then((r) => {if (r.status !== 200) throw new Error(r.status)})"
          ],
          "interval": 10,
          "timeout": 10,
          "retries": 3,
          "startPeriod": 20
        },
        "logConfiguration": {
          "logDriver": "awslogs",
          "options": {
            "awslogs-group": "/ecs/supabase",
            "awslogs-region": "${AWS::Region}",
            "awslogs-stream-prefix": "studio"
          }
        },
        "dependsOn": [
          {
            "containerName": "analytics",
            "condition": "HEALTHY"
          }
        ]
      },
      {
        "name": "meta",
        "image": "supabase/postgres-meta:v0.86.1",
        "essential": true,
        "portMappings": [
          {
            "containerPort": 8080,
            "hostPort": 8080
          }
        ],
        "environment": [
          { "name": "PG_META_PORT", "value": "8080" },
          { "name": "PG_META_DB_HOST", "value": "${PostgresHost}" },
          { "name": "PG_META_DB_PORT", "value": "5432" },
          { "name": "PG_META_DB_NAME", "value": "postgres" },
          { "name": "PG_META_DB_USER", "value": "supabase_admin" }
        ],
        "secrets": [
          { "name": "PG_META_DB_PASSWORD", "valueFrom": "${PostgresPassword}" }
        ],
        "logConfiguration": {
          "logDriver": "awslogs",
          "options": {
            "awslogs-group": "/ecs/supabase",
            "awslogs-region": "${AWS::Region}",
            "awslogs-stream-prefix": "meta"
          }
        }
      },
      {
        "name": "analytics",
        "image": "supabase/logflare:1.12.5",
        "essential": true,
        "portMappings": [
          {
            "containerPort": 4000,
            "hostPort": 4000
          }
        ],
        "environment": [
          { "name": "LOGFLARE_NODE_HOST", "value": "127.0.0.1" },
          { "name": "DB_USERNAME", "value": "supabase_admin" },
          { "name": "DB_DATABASE", "value": "_supabase" },
          { "name": "DB_HOSTNAME", "value": "${PostgresHost}" },
          { "name": "DB_PORT", "value": "5432" },
          { "name": "DB_SCHEMA", "value": "_analytics" },
          { "name": "LOGFLARE_SINGLE_TENANT", "value": "true" },
          { "name": "LOGFLARE_SUPABASE_MODE", "value": "true" },
          { "name": "LOGFLARE_MIN_CLUSTER_SIZE", "value": "1" },
          { "name": "POSTGRES_BACKEND_URL", "value": "postgresql://supabase_admin:${POSTGRES_PASSWORD}@${PostgresHost}:5432/_supabase" },
          { "name": "POSTGRES_BACKEND_SCHEMA", "value": "_analytics" },
          { "name": "LOGFLARE_FEATURE_FLAG_OVERRIDE", "value": "multibackend=true" }
        ],
        "secrets": [
          { "name": "DB_PASSWORD", "valueFrom": "${PostgresPassword}" },
          { "name": "LOGFLARE_API_KEY", "valueFrom": "${LogflareApiKey}" }
        ],
        "healthCheck": {
          "command": [
            "CMD",
            "curl",
            "http://localhost:4000/health"
          ],
          "interval": 5,
          "timeout": 5,
          "retries": 10
        },
        "logConfiguration": {
          "logDriver": "awslogs",
          "options": {
            "awslogs-group": "/ecs/supabase",
            "awslogs-region": "${AWS::Region}",
            "awslogs-stream-prefix": "analytics"
          }
        }
      }
    ]
  }
}